apply from: rootProject.file("gradle/ide.gradle")

kotlin {
    targets {
        if (project.ext.ideaActive) {
            fromPreset(project.ext.ideaPreset, 'posix')
        } else {
            if (project.ext.isLinuxHost) {
                fromPreset(presets.linuxX64, 'linuxX64')
            }
            if (project.ext.isMacosHost) {
                fromPreset(presets.iosArm64, 'iosArm64')
                fromPreset(presets.iosX64, 'iosX64')
                fromPreset(presets.macosX64, 'macosX64')
                /* fromPreset(presets.iosArm32, 'iosArm32') */
            }
            if (project.ext.isWinHost) {
                fromPreset(presets.mingwX64, 'mingwX64')
            }
        }


    }
    sourceSets {
        posixMain.dependencies {
            implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-native', version: coroutines_version
            implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-io', version: kotlinx_io_version
            implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-io', version: kotlinx_io_version

            implementation "org.jetbrains.kotlinx:atomicfu:$atomic_fu_version"
        }

        posixTest { dependsOn posixMain}
        posixMain { dependsOn commonMain }

        if (!project.ext.ideaActive) {
            configure([/*iosArm32Main, */ iosArm64Main, iosX64Main, macosX64Main, linuxX64Main, mingwX64Main]) {
                dependsOn posixMain
            }
            configure([/*iosArm32Test, */ iosArm64Test, iosX64Test, macosX64Test, linuxX64Test, mingwX64Test]) {
                dependsOn posixTest
            }
        }
    }
}
